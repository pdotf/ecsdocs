@inject NavigationManager NavigationManager
@attribute [Authorize]
<CascadingAuthenticationState>
    

    <CascadingBlazoredModal>


        <Blazorise.ThemeProvider Theme="@theme">


            <Router AppAssembly="@typeof(Program).Assembly">
                <Found Context="routeData">
                    <AuthorizeRouteView RouteData="@routeData"
                                        DefaultLayout="@typeof(MainLayout)">
                        <NotAuthorized>
                            @if (!context.User.Identity.IsAuthenticated)
                            {
                                <ECSDocs.Pages.RedirectToLogin />
                            }
                            else
                            {
                                <dfn>
                                    <span style="color:red">
                                        You are not authorized to access
                                        this resource.
                                    </span>
                                </dfn>
                            }
                        </NotAuthorized>
                    </AuthorizeRouteView>
                </Found>
                <NotFound>
                    <LayoutView Layout="@typeof(MainLayout)">
                        
                        <ECSDocs.Pages.RedirectToLogin  />

                    </LayoutView>
                </NotFound>
            </Router>

        </Blazorise.ThemeProvider>
    </CascadingBlazoredModal>
</CascadingAuthenticationState>

@code{
    private Theme theme = new Theme
    {
        // theme settings
    };

    private void Logout()
    {
        NavigationManager.NavigateTo($"Identity/Account/LogOut", true);
    }
}