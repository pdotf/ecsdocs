@page "/VpnCustomers/EditCustomer/{customerID:int}"
@using EcsDataManager.EFContracts
@using EcsDataManager.Contracts
@using EcsDataManager.Entities
@inject ICRUDManager<VpnCustomers> CustomersManager
@inject ICRUDManager<DeviceList>  DeviceManager
@inject ICustomerUrlManager<CustomerUrl>  CUriManager
@inject NavigationManager NavigationManager

@using System.ComponentModel.DataAnnotations
@using System.IO
@using System.Net.Http.Headers


<style type="text/css">
    .simple-form {
    }
</style>
<!--<div>-->

<div class="simple-form">

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6">
                <label for="CustomerName">Customer Name</label>
                <input class="form-control" @bind-value="@_customerEntity.CustomerName" id="CustomerName" />
                <label for="Tel">Tell</label>
                <input class="form-control" @bind-value="@_customerEntity.Tel" id="Tel" />
            </div>
            <div class="col-md-6">
                <label for="Mobile">Mobile</label>
                <input class="form-control" @bind-value="@_customerEntity.Mobile" id="Mobile" />
                <label for="Mobile">@nameof(_customerEntity.OwnerTeam)</label>
                <input class="form-control" @bind-value="@_customerEntity.OwnerTeam" id="Mobile" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <label for="CustomerName">Service Type</label>
                <input class="form-control" @bind-value="@_customerEntity.ServiceType" id="CustomerName" />
                <label for="Tel">Service Topology</label>
                <input class="form-control" @bind-value="@_customerEntity.ServiceTopology" id="Tel" />
            </div>
            <div class="col-md-6">
                <label for="Mobile">Account Manager</label>
                <input class="form-control" @bind-value="@_customerEntity.AccountManager" id="Mobile" />
                <label for="Mobile">@nameof(_customerEntity.IpHQ)</label>
                <input class="form-control" @bind-value="@_customerEntity.IpHQ" id="Mobile" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <label for="CustomerName">AAA Group</label>
                <input class="form-control" @bind-value="@_customerEntity.AAAGroup" id="CustomerName" />
                <label for="Tel">Ip Tunnel</label>
                <input class="form-control" @bind-value="@_customerEntity.IpTunnel" id="Tel" />
            </div>
            <div class="col-md-6">
                <label for="Mobile">Wan Ip Range</label>
                <input class="form-control" @bind-value="@_customerEntity.WanIpRange" id="Mobile" />
                <label for="Mobile">Lan Ip Range</label>
                <input class="form-control" @bind-value="@_customerEntity.LanIpRange" id="Mobile" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <label for="CustomerName">VRF</label>
                <input class="form-control" @bind-value="@_customerEntity.VRF" id="CustomerName" />
                <label for="Tel">Vpn Tools Name</label>
                <input class="form-control" @bind-value="@_customerEntity.VpnToolsName" id="Tel" />
            </div>
            <div class="col-md-6">
                <label for="Mobile">APN</label>
                <input class="form-control" @bind-value="@_customerEntity.APN" id="Mobile" />

            </div>
            <div class="col-md-6">
                <label for="Mobile">Access List</label>
                <input class="form-control" @bind-value="@_customerEntity.AccessList" id="Mobile" />

            </div>
            @if (_customerUrl is not null)
            {
                <div class="col-md-6">
                    <label for="Mobile">Link</label>
                    <input class="form-control" @bind-value="@_customerUrl.link" id="Mobile" />

                </div>
            }

        </div>
        <input type="hidden" @bind-value="@_customerEntity.id" />
    </div>
    <div>

    </div>
    <div class="form-group">
        <button type="button" class="btn btn-primary" @onclick="@(async () => await UpdateCustomers(Convert.ToInt32(CustomerID)))">Save</button>

        <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
    </div>

</div>

@code  {

    [Parameter] public int CustomerID { get; set; }

    VpnCustomers _customerModel = new VpnCustomers();
    VpnCustomers _customerEntity = new VpnCustomers();
    DeviceList _deviceListModel = new DeviceList();
    DeviceList _deviceListEntity = new DeviceList();
    CustomerUrl _customerUrl = new CustomerUrl();
    CustomerUrl _customerUrlModel = new CustomerUrl();
    protected override async Task OnInitializedAsync()
    {
        _customerEntity = await CustomersManager?.Get(CustomerID);
        _deviceListEntity = await DeviceManager?.Get(CustomerID);
        _customerUrl = await CUriManager?.GetMainUrlById(CustomerID,1);

    }


    protected async Task UpdateCustomers(int id)
    {
        if (_customerEntity != null)
        {
            await CustomersManager.Change(_customerModel, _customerEntity);
        }
        if (_deviceListEntity != null)
        {
            await DeviceManager.Change(_deviceListModel, _deviceListEntity);

        }
        if (_customerUrl != null)
        {
            await CUriManager.Update(_customerUrlModel, _customerUrl);

        }
        NavigationManager.NavigateTo("/VpnCustomers" + "/" + CustomerID, true);
    }

    async Task Cancel()
    {
        NavigationManager.NavigateTo("/VpnCustomers" + "/" + CustomerID);
    }

    void Reset()
    {

    }
}
