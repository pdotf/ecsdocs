@page "/IntranetCustomers/addCustomer"
@using EcsDataManager.EFContracts
@using EcsDataManager.Entities
@inject ICRUDManager<IntranetCustomers> CustomerManager
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
<Alert Color="Color.Success" @ref="Success">
    <AlertMessage>Well done!</AlertMessage>
    <AlertDescription>You successfully add a customer.</AlertDescription>
</Alert>
<Snackbar @ref="snackbar">
    <SnackbarBody>
        Single line of text directly related to the operation performed
    </SnackbarBody>
</Snackbar>
<div style="width:auto;height:80px">
    <h2>Add Customer Table</h2>
</div>
<div class="container-fluid" style=";position: relative; display: table; overflow-y: auto; overflow-x: auto; width: auto; min-width: 300px; float:left">
    <div class="container">
        <EditForm Model="@_customer" OnValidSubmit="() => CreateCustomer()">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="col-md-5">
                    <label>Customer Name</label>
                </div>
                <div class="col-md-7">
                    <InputText style="width:100%" @bind-Value="@_customer.CustomerName" />
                    <ValidationMessage For="@(()=>_customer.CustomerName)" />
                </div>

                <div class="col-md-5">
                    <label>Tel</label>
                </div>
                <div class="col-md-7">
                    <InputText style="width:100%" @bind-Value="@_customer.Tell" />
                    <ValidationMessage For="@(()=>_customer.Tell)" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-5">
                    <label>Mobile</label>
                </div>
                <div class="col-md-7">
                    <InputText style="width:100%" @bind-Value="@_customer.Mobile" />
                    <ValidationMessage For="@(()=>_customer.Mobile)" />
                </div>

                <div class="col-md-5">
                    <label>Owner Team</label>
                </div>
                <div class="col-md-7">
                    <InputText style="width:100%" @bind-Value="@_customer.OwnerTeam" />
                    <ValidationMessage For="@(()=>_customer.OwnerTeam)" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-5">
                    <label>Service Type</label>
                </div>
                <div class="col-md-7">
                    <InputText style="width:100%" @bind-Value="@_customer.ServiceType" />
                    <ValidationMessage For="@(()=>_customer.ServiceType)" />
                </div>
                <div class="col-md-5">
                    <label>Acount Manager</label>
                </div>
                <div class="col-md-7">
                    <InputText style="width:100%" @bind-Value="@_customer.AcountManager" />
                    <ValidationMessage For="@(()=>_customer.AcountManager)" />
                </div>
                <div class="col-md-5">
                    <label>Ip Range</label>
                </div>
                <div class="col-md-7">
                    <InputText style="width:100%" @bind-Value="@_customer.IpRange" />
                    <ValidationMessage For="@(()=>_customer.IpRange)" />
                </div>
            </div>

            <div class="row">

                <div class="col-md-5">
                    <label>Comment</label>
                </div>
                <div class="col-md-7">
                    <input style="width:100%" @bind-value="@_customer.Comment" />

                </div>

            </div>
            <div class="row">
                <input style="width:100%" type="hidden" @bind-value="@_customer.Id" />
            </div>

            <div class="row">
                <div class="col-md-1">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
                <div class="col-md-1">
                    <button type="submit" class="btn btn-danger" @onclick="() => Cancel()">Cancel</button>
                </div>
            </div>
        </EditForm>
    </div>


</div>


@code {

    [CascadingParameter] public IModalService Modal { get; set; }
    List<IntranetCustomers> Customers = new List<IntranetCustomers>();
    IntranetCustomers _customer;

    Alert Success;
    Snackbar snackbar;

    string errorString = null;

        protected override void OnInitialized()
        {
           _customer=new IntranetCustomers();
        }

        protected void CreateCustomer()
    {
        try
        {
            CustomerManager.Add(_customer);
            errorString = null;
            navigationManager.NavigateTo($@"IntranetCustomers", true);
        }
        catch (Exception ex)
        {

            errorString = ex.Message;
        }

    }


    void Cancel()
    {
        navigationManager.NavigateTo("/IntranetCustomers");
    }
}
